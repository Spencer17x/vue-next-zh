(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{338:function(t,e,r){"use strict";r.r(e);var n=r(33),u=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"return-语句赘言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#return-语句赘言"}},[t._v("#")]),t._v(" return 语句赘言")]),t._v(" "),r("p",[t._v("一些用户提出了关于 "),r("code",[t._v("setup()")]),t._v(" 中的return语句冗长且感觉像样板的担忧。")]),t._v(" "),r("p",[t._v("我们认为明确的return声明有利于可维护性。它使我们能够显式控制暴露给模板的内容，并且可以作为跟踪在组件中定义模板属性的起点。")]),t._v(" "),r("p",[t._v("有一些建议可以自动公开在 "),r("code",[t._v("setup()")]),t._v(" 中声明的变量，从而使return语句成为可选的。同样，我们不认为这应该是默认设置，因为它违背了标准JavaScript的直觉。但是，有一些方法可以减少用户空间中的琐事：")]),t._v(" "),r("ul",[r("li",[t._v("IDE扩展，它根据 "),r("code",[t._v("setup()")]),t._v(" 中声明的变量自动生成return语句")]),t._v(" "),r("li",[t._v("Babel插件隐式生成并插入return语句。")])])])}),[],!1,null,null,null);e.default=u.exports}}]);