(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{346:function(t,o,e){"use strict";e.r(o);var n=e(33),r=Object(n.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"采纳策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#采纳策略"}},[t._v("#")]),t._v(" 采纳策略")]),t._v(" "),e("p",[t._v("Composition API纯粹是添加的，不会影响/弃用任何现有的2.x API。它已通过 "),e("a",{attrs:{href:"https://github.com/vuejs/composition-api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("@vue/composition库"),e("OutboundLink")],1),t._v(" 作为2.x插件提供。该库的主要目标是提供一种试验API并收集反馈的方法。当前的实现是此提案的最新版本，但是由于作为插件的技术限制，可能包含一些不一致性。随着该提案的更新，它可能还会收到制动变化，因此我们不建议在此阶段在生产中使用它。")]),t._v(" "),e("p",[t._v("我们打算将API内置在3.0中。它将与现有的2.x选项一起使用。")]),t._v(" "),e("p",[t._v("对于选择仅在应用程序中使用Composition API的用户，可以提供编译时标志，以删除仅用于2.x选项的代码并减小库的大小。但是，这是完全可选的。")]),t._v(" "),e("p",[t._v("该API将被定位为高级功能，因为它旨在解决的问题主要出现在大规模应用程序中。我们无意修改文档以将其用作默认文档。相反，它将在文档中有其自己的专用部分。")])])}),[],!1,null,null,null);o.default=r.exports}}]);